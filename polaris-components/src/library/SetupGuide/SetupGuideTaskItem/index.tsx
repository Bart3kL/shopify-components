import React from "react";
import { Text, Button, Image, Link } from "@shopify/polaris";

import { TaskItemProps } from "./types";

export const SetupGuideTaskItem = ({
  label,
  description,
  complete,
  learnMoreUrl,
  actions,
  imageUrl,
  expanded,
  onExpand,
}: TaskItemProps) => {
  return (
    <div
      className={`flex items-start cursor-pointer py-2 pl-2 pr-4 rounded-[10px] transition-colors duration-150 ${
        expanded ? "bg-[#f6f6f7] box-border" : ""
      }`}
      tabIndex={0}
      onClick={onExpand}
      onKeyDown={(e) => {
        if (e.key === "Enter" || e.key === " ") onExpand();
      }}
      role="button"
      aria-expanded={expanded}
    >
      <span className="mr-[18px] mt-[2px] flex-shrink-0">
        {complete ? (
          <svg
            width="20"
            height="20"
            viewBox="2 2 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle cx="12" cy="12" r="10" fill="#1a1a1a"></circle>
            <path
              fill="white"
              d="M17.2738 8.52629C17.6643 8.91682 17.6643 9.54998 17.2738 9.94051L11.4405 15.7738C11.05 16.1644 10.4168 16.1644 10.0263 15.7738L7.3596 13.1072C6.96908 12.7166 6.96908 12.0835 7.3596 11.693C7.75013 11.3024 8.38329 11.3024 8.77382 11.693L10.7334 13.6525L15.8596 8.52629C16.2501 8.13577 16.8833 8.13577 17.2738 8.52629Z"
            ></path>
          </svg>
        ) : (
          <svg
            width="20"
            height="20"
            viewBox="2 2 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill="#8a8a8a"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M10.5334 2.10692C11.0126 2.03643 11.5024 2 12 2C12.4976 2 12.9874 2.03643 13.4666 2.10692C14.013 2.18729 14.3908 2.6954 14.3104 3.2418C14.23 3.78821 13.7219 4.166 13.1755 4.08563C12.7924 4.02927 12.3999 4 12 4C11.6001 4 11.2076 4.02927 10.8245 4.08563C10.2781 4.166 9.76995 3.78821 9.68958 3.2418C9.6092 2.6954 9.987 2.18729 10.5334 2.10692ZM7.44122 4.17428C7.77056 4.61763 7.67814 5.24401 7.23479 5.57335C6.603 6.04267 6.04267 6.603 5.57335 7.23479C5.24401 7.67814 4.61763 7.77056 4.17428 7.44122C3.73094 7.11188 3.63852 6.4855 3.96785 6.04216C4.55386 5.25329 5.25329 4.55386 6.04216 3.96785C6.4855 3.63852 7.11188 3.73094 7.44122 4.17428ZM16.5588 4.17428C16.8881 3.73094 17.5145 3.63852 17.9578 3.96785C18.7467 4.55386 19.4461 5.25329 20.0321 6.04216C20.3615 6.4855 20.2691 7.11188 19.8257 7.44122C19.3824 7.77056 18.756 7.67814 18.4267 7.23479C17.9573 6.603 17.397 6.04267 16.7652 5.57335C16.3219 5.24401 16.2294 4.61763 16.5588 4.17428ZM3.2418 9.68958C3.78821 9.76995 4.166 10.2781 4.08563 10.8245C4.02927 11.2076 4 11.6001 4 12C4 12.3999 4.02927 12.7924 4.08563 13.1755C4.166 13.7219 3.78821 14.23 3.2418 14.3104C2.6954 14.3908 2.18729 14.013 2.10692 13.4666C2.03643 12.9874 2 12.4976 2 12C2 11.5024 2.03643 11.0126 2.10692 10.5334C2.18729 9.987 2.6954 9.6092 3.2418 9.68958ZM20.7582 9.68958C21.3046 9.6092 21.8127 9.987 21.8931 10.5334C21.9636 11.0126 22 11.5024 22 12C22 12.4976 21.9636 12.9874 21.8931 13.4666C21.8127 14.013 21.3046 14.3908 20.7582 14.3104C20.2118 14.23 19.834 13.7219 19.9144 13.1755C19.9707 12.7924 20 12.3999 20 12C20 11.6001 19.9707 11.2076 19.9144 10.8245C19.834 10.2781 20.2118 9.76995 20.7582 9.68958ZM4.17428 16.5588C4.61763 16.2294 5.24401 16.3219 5.57335 16.7652C6.04267 17.397 6.603 17.9573 7.23479 18.4267C7.67814 18.756 7.77056 19.3824 7.44122 19.8257C7.11188 20.2691 6.4855 20.3615 6.04216 20.0321C5.25329 19.4461 4.55386 18.7467 3.96785 17.9578C3.63852 17.5145 3.73094 16.8881 4.17428 16.5588ZM19.8257 16.5588C20.2691 16.8881 20.3615 17.5145 20.0321 17.9578C19.4461 18.7467 18.7467 19.4461 17.9578 20.0321C17.5145 20.3615 16.8881 20.2691 16.5588 19.8257C16.2294 19.3824 16.3219 18.756 16.7652 18.4267C17.397 17.9573 17.9573 17.397 18.4267 16.7652C18.756 16.3219 19.3824 16.2294 19.8257 16.5588ZM9.68958 20.7582C9.76995 20.2118 10.2781 19.834 10.8245 19.9144C11.2076 19.9707 11.6001 20 12 20C12.3999 20 12.7924 19.9707 13.1755 19.9144C13.7219 19.834 14.23 20.2118 14.3104 20.7582C14.3908 21.3046 14.013 21.8127 13.4666 21.8931C12.9874 21.9636 12.4976 22 12 22C11.5024 22 11.0126 21.9636 10.5334 21.8931C9.987 21.8127 9.6092 21.3046 9.68958 20.7582Z"
            ></path>
            <circle cx="12" cy="12" r="9" stroke-width="2"></circle>
          </svg>
        )}
      </span>

      <div className="md:mr-[72px]">
        <Text
          as="span"
          variant="bodyMd"
          fontWeight={expanded ? "bold" : "regular"}
        >
          {label}
        </Text>
        {expanded && (
          <>
            {description && (
              <div style={{ marginTop: 8 }}>
                <Text as="p" tone="subdued">
                  {description}
                  {learnMoreUrl && (
                    <>
                      {" "}
                      <Link
                        url={learnMoreUrl}
                        accessibilityLabel={`Learn more about ${label}`}
                      >
                        Learn more
                      </Link>
                    </>
                  )}
                </Text>
              </div>
            )}

            {actions && actions.length > 0 && (
              <div className="flex gap-4 mt-4">
                {actions.map((action) => (
                  <Button
                    key={action.label}
                    url={action.url}
                    variant={action.primary ? "primary" : "tertiary"}
                    onClick={action.onClick}
                    disabled={action.disabled}
                    size="medium"
                  >
                    {action.label}
                  </Button>
                ))}
              </div>
            )}
          </>
        )}
      </div>
      {expanded && imageUrl && (
        <Image
          alt=""
          source={imageUrl}
          className="hidden md:block md:min-w-[120px] md:max-w-[120px] rounded-[8px] ml-auto"
        />
      )}
    </div>
  );
};
